{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankitha\\\\OneDrive\\\\Desktop\\\\dashboard\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Dashboard.css'; // For custom styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [categories, setCategories] = useState([{\n    id: 1,\n    name: \"Dynamic Dashboard\",\n    widgets: [{\n      id: 1,\n      name: \"Widget 1\",\n      type: \"text\",\n      content: \"Random text for widget 1\"\n    }]\n  }]);\n  const [widgetName, setWidgetName] = useState(\"\");\n  const [widgetContent, setWidgetContent] = useState(\"\");\n  const [widgetType, setWidgetType] = useState(\"text\"); // Default widget type is 'text'\n\n  const addWidget = categoryId => {\n    if (widgetName && widgetContent) {\n      setCategories(prevState => prevState.map(category => category.id === categoryId ? {\n        ...category,\n        widgets: [...category.widgets, {\n          id: Date.now(),\n          name: widgetName,\n          type: widgetType,\n          // Store widget type\n          content: widgetContent\n        }]\n      } : category));\n      setWidgetName(\"\");\n      setWidgetContent(\"\");\n    } else {\n      alert(\"Please enter both widget name and content\");\n    }\n  };\n  const removeWidget = (categoryId, widgetId) => {\n    setCategories(prevState => prevState.map(category => category.id === categoryId ? {\n      ...category,\n      widgets: category.widgets.filter(widget => widget.id !== widgetId)\n    } : category));\n  };\n\n  // Render the widget based on its type\n  const renderWidget = widget => {\n    switch (widget.type) {\n      case \"text\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: widget.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: widget.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-btn\",\n            onClick: () => removeWidget(1, widget.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, widget.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this);\n      case \"image\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: widget.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: widget.content,\n            alt: widget.name,\n            style: {\n              width: '100%',\n              borderRadius: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-btn\",\n            onClick: () => removeWidget(1, widget.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, widget.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n      case \"chart\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: widget.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#2a2a3d',\n              padding: '20px',\n              borderRadius: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [widget.content, \" (This is a chart widget)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-btn\",\n            onClick: () => removeWidget(1, widget.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, widget.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: category.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: widgetName,\n          onChange: e => setWidgetName(e.target.value),\n          placeholder: \"Enter Widget Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: widgetContent,\n          onChange: e => setWidgetContent(e.target.value),\n          placeholder: `Enter ${widgetType === 'image' ? 'Image URL' : 'Content'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: widgetType,\n          onChange: e => setWidgetType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            children: \"Text Widget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"image\",\n            children: \"Image Widget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"chart\",\n            children: \"Chart Widget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addWidget(category.id),\n          children: \"Add Widget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-grid\",\n        children: category.widgets.map(widget => renderWidget(widget))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, category.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"4DfQKKM2f0ILC8EjyLTidcvjd7I=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dashboard","_s","categories","setCategories","id","name","widgets","type","content","widgetName","setWidgetName","widgetContent","setWidgetContent","widgetType","setWidgetType","addWidget","categoryId","prevState","map","category","Date","now","alert","removeWidget","widgetId","filter","widget","renderWidget","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","width","borderRadius","backgroundColor","padding","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ankitha/OneDrive/Desktop/dashboard/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './Dashboard.css'; // For custom styling\r\n\r\nconst Dashboard = () => {\r\n  const [categories, setCategories] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"Dynamic Dashboard\",\r\n      widgets: [\r\n        { id: 1, name: \"Widget 1\", type: \"text\", content: \"Random text for widget 1\" },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const [widgetName, setWidgetName] = useState(\"\");\r\n  const [widgetContent, setWidgetContent] = useState(\"\");\r\n  const [widgetType, setWidgetType] = useState(\"text\"); // Default widget type is 'text'\r\n\r\n  const addWidget = (categoryId) => {\r\n    if (widgetName && widgetContent) {\r\n      setCategories((prevState) =>\r\n        prevState.map((category) =>\r\n          category.id === categoryId\r\n            ? {\r\n                ...category,\r\n                widgets: [\r\n                  ...category.widgets,\r\n                  {\r\n                    id: Date.now(),\r\n                    name: widgetName,\r\n                    type: widgetType, // Store widget type\r\n                    content: widgetContent,\r\n                  },\r\n                ],\r\n              }\r\n            : category\r\n        )\r\n      );\r\n      setWidgetName(\"\");\r\n      setWidgetContent(\"\");\r\n    } else {\r\n      alert(\"Please enter both widget name and content\");\r\n    }\r\n  };\r\n\r\n  const removeWidget = (categoryId, widgetId) => {\r\n    setCategories((prevState) =>\r\n      prevState.map((category) =>\r\n        category.id === categoryId\r\n          ? {\r\n              ...category,\r\n              widgets: category.widgets.filter((widget) => widget.id !== widgetId),\r\n            }\r\n          : category\r\n      )\r\n    );\r\n  };\r\n\r\n  // Render the widget based on its type\r\n  const renderWidget = (widget) => {\r\n    switch (widget.type) {\r\n      case \"text\":\r\n        return (\r\n          <div className=\"widget\" key={widget.id}>\r\n            <h3>{widget.name}</h3>\r\n            <p>{widget.content}</p>\r\n            <button\r\n              className=\"remove-btn\"\r\n              onClick={() => removeWidget(1, widget.id)}\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      case \"image\":\r\n        return (\r\n          <div className=\"widget\" key={widget.id}>\r\n            <h3>{widget.name}</h3>\r\n            <img src={widget.content} alt={widget.name} style={{ width: '100%', borderRadius: '10px' }} />\r\n            <button\r\n              className=\"remove-btn\"\r\n              onClick={() => removeWidget(1, widget.id)}\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      case \"chart\":\r\n        return (\r\n          <div className=\"widget\" key={widget.id}>\r\n            <h3>{widget.name}</h3>\r\n            {/* Placeholder for chart */}\r\n            <div style={{ backgroundColor: '#2a2a3d', padding: '20px', borderRadius: '10px' }}>\r\n              <p>{widget.content} (This is a chart widget)</p>\r\n            </div>\r\n            <button\r\n              className=\"remove-btn\"\r\n              onClick={() => removeWidget(1, widget.id)}\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {categories.map((category) => (\r\n        <div className=\"category\" key={category.id}>\r\n          <h2>{category.name}</h2>\r\n          <div className=\"widget-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={widgetName}\r\n              onChange={(e) => setWidgetName(e.target.value)}\r\n              placeholder=\"Enter Widget Name\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={widgetContent}\r\n              onChange={(e) => setWidgetContent(e.target.value)}\r\n              placeholder={`Enter ${widgetType === 'image' ? 'Image URL' : 'Content'}`}\r\n            />\r\n            <select value={widgetType} onChange={(e) => setWidgetType(e.target.value)}>\r\n              <option value=\"text\">Text Widget</option>\r\n              <option value=\"image\">Image Widget</option>\r\n              <option value=\"chart\">Chart Widget</option>\r\n            </select>\r\n            <button onClick={() => addWidget(category.id)}>Add Widget</button>\r\n          </div>\r\n\r\n          <div className=\"widget-grid\">\r\n            {category.widgets.map((widget) => renderWidget(widget))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}